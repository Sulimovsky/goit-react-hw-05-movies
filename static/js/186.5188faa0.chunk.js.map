{"version":3,"file":"static/js/186.5188faa0.chunk.js","mappings":"2OAgDA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGH,GAAW,GAFd,SAG0BI,EAAAA,GAAoBV,GAH9C,OAGSW,EAHT,OAIGP,EAAWO,EAASC,KAAKC,SAJ5B,gDAMGL,GAAS,GANZ,yBAQGF,GAAW,GARd,2EAAD,EAWD,GAAE,CAACN,KAGF,2BACGG,EAAQW,OAAS,GAChB,wBACGX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BACE,mCADF,IACkBD,MAElB,uBAAIC,MAJGF,EADE,OAUf,sEAEDX,IAAW,SAAC,IAAD,IACXE,IAAS,SAAC,IAAD,MAGf,C,mCC5CD,IAFc,kBAAM,mDAAN,C,4LCERY,EAAU,mCACVC,EAAW,+BACJC,EAAe,kCAEfC,EAAoB,WAE/B,OADgBC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,uCAA2CD,GAEjE,EAEYK,EAAkB,SAAAC,GAI7B,OAHiBF,EAAAA,EAAAA,GAAM,GAAD,OACjBH,EADiB,iCACgBD,EADhB,kBACiCM,GAGxD,EAEYC,EAAkB,SAAA1B,GAE7B,OADiBuB,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,kBAAsBpB,EAAtB,oBAAyCmB,GAEhE,EAEYQ,EAAkB,SAAA3B,GAI7B,OAHiBuB,EAAAA,EAAAA,GAAM,GAAD,OACjBH,EADiB,kBACCpB,EADD,4BAC4BmB,GAGnD,EAEYS,EAAkB,SAAA5B,GAI7B,OAHiBuB,EAAAA,EAAAA,GAAM,GAAD,OACjBH,EADiB,kBACCpB,EADD,4BAC4BmB,GAGnD,C","sources":["components/Reviews/Reviews.jsx","components/common/Error/Error.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/common/Loader/Loader';\nimport Error from 'components/common/Error/Error';\nimport * as API from '../../services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        setLoading(true);\n        const response = await API.getMovieReviews(movieId);\n        setReviews(response.data.results);\n      } catch {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Author:</b> {author}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There aren't any reviews for this movie...</p>\n      )}\n      {loading && <Loader />}\n      {error && <Error />}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const Error = () => <h1>Something went wrong...</h1>;\n\nexport default Error;\n","import axios from 'axios';\n\nconst API_KEY = '288d413468bcdb13681c080a523b13ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = () => {\n  const resonse = axios(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return resonse;\n};\n\nexport const getSearchMovies = query => {\n  const response = axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n};\n\nexport const getMovieDetails = movieId => {\n  const response = axios(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMovieCredits = movieId => {\n  const response = axios(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieReviews = movieId => {\n  const response = axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","API","response","data","results","length","map","id","author","content","API_KEY","BASE_URL","BASE_IMG_URL","getTrendingMovies","axios","getSearchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}