{"version":3,"file":"static/js/21.a1393fd6.chunk.js","mappings":"kJAEA,IAFc,kBAAM,mDAAN,C,iECCd,EAA0B,yB,SCiB1B,EAdgB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qBAASC,UAAWC,EAApB,UACGH,IAAS,wBAAKA,IACdC,IAGN,C,+JCqBD,EA5BoB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACrB,OACE,iBAAKF,UAAU,gBAAf,WACE,gBAAKA,UAAU,UAAf,UACE,gBACEG,IAAG,UAAKC,EAAAA,IAAL,OAAwBF,EAAMG,aACjCC,IAAKJ,EAAMJ,WAGf,4BACE,wBAAKI,EAAMJ,SACX,qCAAaI,EAAMK,aAAaC,QAAQ,OACxC,sCACA,uBAAIN,EAAMO,gBAIjB,E,kBCkDD,EA9DqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOZ,EAAP,KAAca,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KACMC,EAAY,oBAAGV,EAASW,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAgB7C,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGN,GAAW,GAFd,SAG0Bb,EAAAA,GAAoBQ,GAH9C,OAGSY,EAHT,OAIGT,EAASS,EAASC,MAJrB,gDAMGN,GAAS,GANZ,yBAQGF,GAAW,GARd,2EAAD,EAWD,GAAE,CAACL,KAGF,2BACE,UAACc,EAAA,EAAD,YACE,SAAC,KAAD,CAAMC,GAAIP,EAAcpB,UAAU,eAAlC,wBAGCE,IACC,iCACE,SAAC,EAAD,CAAaA,MAAOA,KAEpB,iBAAKF,UAAU,YAAf,WACE,6CACA,gBAAIA,UAAU,iBAAd,WACE,eAAIA,UAAU,OAAd,UACE,SAAC,KAAD,CAAM2B,GAAG,OAAON,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,eAAIpB,UAAU,OAAd,UACE,SAAC,KAAD,CAAM2B,GAAG,UAAUN,MAAO,CAAEC,KAAMF,GAAlC,8BAON,0BACE,SAAC,EAAAQ,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKPd,IAAW,SAACc,EAAA,EAAD,IACXZ,IAAS,SAACa,EAAA,EAAD,QAIjB,C,4LCnEKC,EAAU,mCACVC,EAAW,+BACJC,EAAe,kCAEfC,EAAoB,WAE/B,OADgBC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,uCAA2CD,GAEjE,EAEYK,EAAkB,SAAAC,GAI7B,OAHiBF,EAAAA,EAAAA,GAAM,GAAD,OACjBH,EADiB,iCACgBD,EADhB,kBACiCM,GAGxD,EAEYC,EAAkB,SAAA3B,GAE7B,OADiBwB,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,kBAAsBrB,EAAtB,oBAAyCoB,GAEhE,EAEYQ,EAAkB,SAAA5B,GAI7B,OAHiBwB,EAAAA,EAAAA,GAAM,GAAD,OACjBH,EADiB,kBACCrB,EADD,4BAC4BoB,GAGnD,EAEYS,EAAkB,SAAA7B,GAI7B,OAHiBwB,EAAAA,EAAAA,GAAM,GAAD,OACjBH,EADiB,kBACCrB,EADD,4BAC4BoB,GAGnD,C","sources":["components/common/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/common/Section/Section.module.css?6f27","components/common/Section/Section.jsx","components/CardDetails/CardDetails.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["const Error = () => <h1>Something went wrong...</h1>;\n\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__B7ftV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport * as API from '../../services/api';\nimport './CardDetails.scss';\n\nconst CardDetails = ({ movie }) => {\n  return (\n    <div className=\"movie-details\">\n      <div className=\"box-img\">\n        <img\n          src={`${API.BASE_IMG_URL}${movie.poster_path}`}\n          alt={movie.title}\n        />\n      </div>\n      <div>\n        <h2>{movie.title}</h2>\n        <p>Average: {movie.vote_average.toFixed(1)}</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n      </div>\n    </div>\n  );\n};\n\nCardDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default CardDetails;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport Section from 'components/common/Section/Section';\nimport CardDetails from 'components/CardDetails/CardDetails';\nimport Loader from 'components/common/Loader/Loader';\nimport Error from 'components/common/Error/Error';\nimport * as API from '../../services/api';\nimport './MovieDetails.scss';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    (async function () {\n      try {\n        setLoading(true);\n        const response = await API.getMovieDetails(movieId);\n        setMovie(response.data);\n      } catch {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <main>\n      <Section>\n        <Link to={backLinkHref} className=\"go-back-link\">\n          &lt;- Go back\n        </Link>\n        {movie && (\n          <>\n            <CardDetails movie={movie} />\n\n            <div className=\"more-info\">\n              <h3>Additional info</h3>\n              <ul className=\"list-more-info\">\n                <li className=\"item\">\n                  <Link to=\"cast\" state={{ from: backLinkHref }}>\n                    Cast\n                  </Link>\n                </li>\n                <li className=\"item\">\n                  <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </div>\n\n            <div>\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </div>\n          </>\n        )}\n        {loading && <Loader />}\n        {error && <Error />}\n      </Section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '288d413468bcdb13681c080a523b13ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = () => {\n  const resonse = axios(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return resonse;\n};\n\nexport const getSearchMovies = query => {\n  const response = axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n};\n\nexport const getMovieDetails = movieId => {\n  const response = axios(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMovieCredits = movieId => {\n  const response = axios(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieReviews = movieId => {\n  const response = axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["title","children","className","css","movie","src","API","poster_path","alt","vote_average","toFixed","overview","location","useLocation","movieId","useParams","useState","setMovie","loading","setLoading","error","setError","backLinkHref","state","from","useEffect","response","data","Section","to","Suspense","fallback","Loader","Error","API_KEY","BASE_URL","BASE_IMG_URL","getTrendingMovies","axios","getSearchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}