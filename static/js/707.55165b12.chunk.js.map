{"version":3,"file":"static/js/707.55165b12.chunk.js","mappings":"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","sources":["components/CardMovie/CardMovie.jsx","components/common/Error/Error.jsx","webpack://react-homework-template/./src/components/common/Section/Section.module.css?6f27","components/common/Section/Section.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './CardMovie.scss';\n\nconst CardMovie = ({ id, img, title, to }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"card-film\">\n      <div className=\"img-box\">\n        <img src={img} alt={title} />\n      </div>\n      <div className=\"link-box\">\n        <Link to={to ? `${to}/${id}` : `${id}`} state={{ from: location }}>\n          {title}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nCardMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  to: PropTypes.string,\n};\n\nexport default CardMovie;\n","const Error = () => <h1>Something went wrong...</h1>;\n\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__B7ftV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBox.scss';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value.trim() === '') {\n      return;\n    }\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <div className=\"search-box\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n        <button type=\"submit\" className=\"btn\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport Section from 'components/common/Section/Section';\nimport CardFilm from 'components/CardMovie/CardMovie';\nimport Loader from 'components/common/Loader/Loader';\nimport Error from 'components/common/Error/Error';\nimport * as API from '../../services/api';\nimport './Movies.scss';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [queryParams, setQueryParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const query = queryParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    (async function () {\n      try {\n        setLoading(true);\n        const response = await API.getSearchMovies(query);\n        setMovies(response.data.results);\n      } catch {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [query]);\n\n  const handleSubmit = value => {\n    const params = value !== '' ? { query: value } : {};\n    setQueryParams(params);\n  };\n\n  return (\n    <main>\n      <Section>\n        <SearchBox onSubmit={handleSubmit} />\n        {movies.length > 0 && (\n          <ul className=\"moives-list\">\n            {movies.map(({ id, title, name, poster_path }) => (\n              <li key={id} className=\"item\">\n                <CardFilm\n                  img={`${API.BASE_IMG_URL}${poster_path}`}\n                  title={title ?? name}\n                  id={id}\n                />\n              </li>\n            ))}\n          </ul>\n        )}\n        {loading && <Loader />}\n        {error && <Error />}\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '288d413468bcdb13681c080a523b13ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendingMovies = () => {\n  const resonse = axios(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return resonse;\n};\n\nexport const getSearchMovies = query => {\n  const response = axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n};\n\nexport const getMovieDetails = movieId => {\n  const response = axios(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMovieCredits = movieId => {\n  const response = axios(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieReviews = movieId => {\n  const response = axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["id","img","title","to","location","useLocation","className","src","alt","state","from","children","css","onSubmit","useState","value","setValue","e","preventDefault","trim","type","onChange","target","movies","setMovies","useSearchParams","queryParams","setQueryParams","loading","setLoading","error","setError","query","get","useEffect","API","response","data","results","Section","length","map","name","poster_path","Loader","Error","API_KEY","BASE_URL","BASE_IMG_URL","getTrendingMovies","axios","getSearchMovies","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}